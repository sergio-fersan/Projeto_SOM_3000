#include <LiquidCrystal.h>


LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

#define btCima 10
#define btBaixo 9
#define btSlc 7

#define buzzer 13
#define vrm 10  // Botão 1 (Vermelho)
#define azl 9   // Botão 2 (Azul)
#define vrd 8   // Botão 3 (Verde)
#define amr 7   // Botão 4 (Amarelo)

// LEDs dos botões
#define ledBt1 A0
#define ledBt2 A1
#define ledBt3 A2
#define ledBt4 A3

#define ledErro A4
#define ledAcerto A5

// Notas dos botoes
#define DO 261
#define RE 295
#define MI 329
#define FA 349

int menuPos = 1;
int vidas = 3;

// Variáveis do jogo
int maxCompSeq = 5;
int seq[12];
int seqJog[12];       // Sequência do jogador
int notaAtual = 0;
int nivel = 1;

void setup() {
  lcd.begin(16, 2);
  
  pinMode(btCima, INPUT_PULLUP);
  pinMode(btBaixo, INPUT_PULLUP);
  pinMode(btSlc, INPUT_PULLUP);
  
  pinMode(vrm, INPUT_PULLUP);
  pinMode(azl, INPUT_PULLUP);
  pinMode(vrd, INPUT_PULLUP);
  pinMode(amr, INPUT_PULLUP);
  
  pinMode(ledBt1, OUTPUT);
  pinMode(ledBt2, OUTPUT);
  pinMode(ledBt3, OUTPUT);
  pinMode(ledBt4, OUTPUT);
  pinMode(ledErro, OUTPUT);
  pinMode(ledAcerto, OUTPUT);
  
  digitalWrite(ledBt1, LOW);
  digitalWrite(ledBt2, LOW);
  digitalWrite(ledBt3, LOW);
  digitalWrite(ledBt4, LOW);
  digitalWrite(ledErro, LOW);
  digitalWrite(ledAcerto, LOW);
  
  // Creditos
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Sergio S.Santos");
  
  lcd.setCursor(0, 1);
  lcd.print("RA 22.124.082-3");
  tone(buzzer, 349);
  delay(250);
  tone(buzzer, 440);
  delay(400);
  noTone(buzzer);
  
  delay(2000);
  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Gabriel Machado");
  lcd.setCursor(0, 1);
  lcd.print("RA 22.123.005-5");
  tone(buzzer, 440);
  delay(250);
  tone(buzzer, 523);
  delay(400);
  noTone(buzzer);
  delay(2000);
  
  tone(buzzer, 261);
  delay(500);
  lcd.clear();
  tone(buzzer, 329);
  lcd.print("!!SOM - 3000!!");
  delay(250);
  lcd.clear();
  delay(250);
  tone(buzzer, 392);
  lcd.print("!!SOM - 3000!!");
  delay(250);
  lcd.clear();
  delay(250);
  tone(buzzer, 523);
  lcd.print("!!SOM - 3000!!");
  delay(250);
  noTone(buzzer);
  lcd.clear();
  delay(500);
  
  
  // Menu inicial
  telaInicio();
}

void loop() {
  if (digitalRead(btCima) == LOW) {
    if (menuPos > 1) {
      menuPos--;
      telaInicio();
      delay(200);
    }
  }
  
  if (digitalRead(btBaixo) == LOW) {
    if (menuPos < 5) {
      menuPos++;
      telaInicio();
      delay(200);
    }
  }
  
if (digitalRead(btSlc) == LOW) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Musica ");
  lcd.print(menuPos);
  
  tocar(menuPos);
  
  escSeq(menuPos);
  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Sua vez!!!");
  delay(500);
  
  esperar();
  
  // Se esta certo
  if (notaAtual == maxCompSeq && nivel == 4) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Parabens!!");
  lcd.setCursor(0, 1);
  lcd.print("Musica completa!");
  digitalWrite(ledAcerto, HIGH);
  delay(2000);
  digitalWrite(ledAcerto, LOW);
  
  // Reinicia o jogo
  nivel = 1;
  maxCompSeq = 5;
}
  
  delay(2000);
  telaInicio();
  delay(200);
}
}

void tocar(int numMusica) {
  switch(numMusica) {
    case 1:
    if(nivel == 1){
      tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    } else if(nivel == 2){
      tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    } else if(nivel == 3){
      tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
    } else if(nivel == 4){
      tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    } 
      break;
    case 2:
      if(nivel == 1){
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    } else if(nivel == 2){
      tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    } else if(nivel == 3){
      tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    } else if(nivel == 4){
      tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    }
      break;
      
    case 3:
    if(nivel == 1){
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    } else if(nivel == 2){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    } else if(nivel == 3){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    } else if(nivel == 4){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    }
      break;
      
    case 4:
      if(nivel == 1){
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    } else if(nivel == 2){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
    } else if(nivel == 3){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
    } else if(nivel == 4){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(MI, ledBt3, 200); delay(300);
    tocarNota(RE, ledBt2, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
    }
      break;
      
    case 5:
      if(nivel == 1){
      tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
    } else if(nivel == 2){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
    } else if(nivel == 3){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    } else if(nivel == 4){
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
      tocarNota(DO, ledBt1, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
      tocarNota(FA, ledBt4, 200); delay(300);
    tocarNota(DO, ledBt1, 200); delay(300);
      tocarNota(MI, ledBt3, 200); delay(300);
      tocarNota(RE, ledBt2, 200); delay(300);
    }
      break;
  }
}

void tocarNota(int nota, int pinLed, int tempo) {
  tone(buzzer, nota, tempo);
  digitalWrite(pinLed, HIGH);
  delay(tempo);
  digitalWrite(pinLed, LOW);
}

void escSeq(int numMusica) {
  switch(numMusica) {
    case 1:
      seq[0]=1; seq[1]=1; seq[2]=3; seq[3]=2; seq[4]=4;
      seq[5]=2; seq[6]=1;
      seq[7]=1; seq[8]=4;
      seq[9]=3; seq[10]=2; seq[11]=1;
      break;
    case 2:
      seq[0]=3; seq[1]=3; seq[2]=4; seq[3]=1; seq[4]=2; 
      seq[5]=1; seq[6]=4; 
      seq[7]=3; seq[8]=2; 
      seq[9]=2; seq[10]=3; seq[11]=1; 
      break;
    case 3:
      seq[0]=1; seq[1]=1; seq[2]=2; seq[3]=3; seq[4]=4; 
      seq[5]=2; seq[6]=1; 
      seq[7]=2; seq[8]=4; 
      seq[9]=3; seq[10]=1; seq[11]=2; 
      break;
    case 4:
      seq[0]=1; seq[1]=2; seq[2]=3; seq[3]=4; seq[4]=4; 
      seq[5]=1; seq[6]=2; 
      seq[7]=1; seq[8]=2; 
      seq[9]=3; seq[10]=2; seq[11]=1;  
      break;
    case 5:
      seq[0]=1; seq[1]=3; seq[2]=2; seq[3]=4; seq[4]=1; 
      seq[5]=1; seq[6]=3; 
      seq[7]=2; seq[8]=4; 
      seq[9]=1; seq[10]=3; seq[11]=2;
      break;
  }
}

void esperar() {
  notaAtual = 0;
  
  while (notaAtual < maxCompSeq && vidas > 0) {
    if (digitalRead(vrm) == LOW) {
      tocarNota(DO, ledBt1, 100);
      if (seq[notaAtual] != 1) {
        tocouErrado();
        break;
      }
      seqJog[notaAtual] = 1;
      notaAtual++;
      delay(100);
    }
    else if (digitalRead(azl) == LOW) {
      tocarNota(RE, ledBt2, 100);
      if (seq[notaAtual] != 2) {
        tocouErrado();
        break;
      }
      seqJog[notaAtual] = 2;
      notaAtual++;
      delay(100);
    }
    else if (digitalRead(vrd) == LOW) {
      tocarNota(MI, ledBt3, 100);
      if (seq[notaAtual] != 3) {
        tocouErrado();
        break;
      }
      seqJog[notaAtual] = 3;
      notaAtual++;
      delay(100);
    }
    else if (digitalRead(amr) == LOW) {
      tocarNota(FA, ledBt4, 100);
      if (seq[notaAtual] != 4) {
        tocouErrado();
        break;
      }
      seqJog[notaAtual] = 4;
      notaAtual++;
      delay(100);
    }
  }

  if (vidas > 0 && notaAtual == maxCompSeq) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Acertou!");
    
    nivel++;
    
    switch(nivel) {
      case 2: maxCompSeq = 7; break;
      case 3: maxCompSeq = 9; break;
      case 4: maxCompSeq = 12; break;
      default: 
        lcd.setCursor(0, 1);
        lcd.print("Musica completa!");
        delay(2000);
        nivel = 1;
        maxCompSeq = 5;
        telaInicio();
        return;
    }
    
    lcd.setCursor(0, 1);
    lcd.print("Proximo nivel!");
    digitalWrite(ledAcerto, HIGH);
    delay(1500);
    digitalWrite(ledAcerto, LOW);
    
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Nivel ");
    lcd.print(nivel);
    lcd.setCursor(0, 1);
    lcd.print("Notas: ");
    lcd.print(maxCompSeq);
    delay(1500);
    
    tocar(menuPos);
    
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Repita a");
    lcd.setCursor(0, 1);
    lcd.print("sequencia!");
    delay(250);
    
    notaAtual = 0;
    esperar();
  }
}

void tocouErrado() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Errou!");
  lcd.setCursor(0, 1);
  lcd.print("Vidas: ");
  lcd.print(vidas-1);
  
  digitalWrite(ledErro, HIGH);
  vidas--;
  
  tone(buzzer, 100, 500);
  delay(500);
  digitalWrite(ledErro, LOW);
  
  if (vidas <= 0) {
    gameOver();
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Tente novamente!");
    delay(1000);
    
    tocar(menuPos);
    
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Repita a");
    lcd.setCursor(0, 1);
    lcd.print("sequencia!");
    delay(250);
    
    notaAtual = 0;
    esperar();
  }
}

bool verificar() {
  for (int i = 0; i < 5; i++) {
    if (seq[i] != seqJog[i]) {
      return false;
    }
  }
  return true;
}

void telaInicio() {
  lcd.clear();
  
  lcd.setCursor(13, 0);
  lcd.print("V:");
  lcd.print(vidas);
  
  lcd.setCursor(0, 0);
  lcd.print("Selecione:");
  
  lcd.setCursor(0, 1);
  for (int i = 1; i <= 5; i++) {
    if (i == menuPos) {
      lcd.print("[");
      lcd.print(i);
      lcd.print("]");
    } else {
      lcd.print(" ");
      lcd.print(i);
      lcd.print(" ");
    }
    
    if (i < 5) lcd.print("");
  }
}

void gameOver() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("GAME OVER!");
  lcd.setCursor(0, 1);
  lcd.print("Tente novamente!");
  
  for (int i = 0; i < 3; i++) { // Musiquinha de game over
    tone(buzzer, 200, 200);
    digitalWrite(ledErro, HIGH);
    delay(300);
    digitalWrite(ledErro, LOW);
    delay(100);
  }
  
  // Reseta as variáveis
  vidas = 3;
  nivel = 1;
  maxCompSeq = 5;
  
  delay(2000);
  telaInicio();
}
